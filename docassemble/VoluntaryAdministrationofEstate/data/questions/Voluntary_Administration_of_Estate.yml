comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Voluntary Administration of Estate
  short title: |
    Voluntary Administration of Estate
---
comment: |
  This section is used by MAVirtualCourts to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['Voluntary_Administration_of_Estate']"):
    interview_metadata.initializeObject('Voluntary_Administration_of_Estate')
  interview_metadata['Voluntary_Administration_of_Estate'].update({
    'title': 'Voluntary Administration of Estate',
    'short title': 'Voluntary Administration of Estate',
    'description': 'Description',
    'original_form': 'https://www.mass.gov/guides/file-a-voluntary-administration-for-an-estate',
    'allowed courts': [
      'Probate and Family Court',
    ],
    'categories': [
      'Other',
      'Probate',
    ],
    'logic block variable': 'Voluntary_Administration_of_Estate',
    'attachment block variable': 'Voluntary_Administration_of_Estate_attachment',
    'typical role': 'plaintiff',
  })
---
include:
  - docassemble.MAVirtualCourt:basic-questions.yml
  - docassemble.income:financial_statement.yml
---
features:
  navigation: True
---
sections:
  - review_Voluntary_Administration_of_Estate: Review your answers
---
modules:
 - docassemble.income.income
---
objects:
  - decedent: Individual
  - interested_parties: PeopleList
  - attorney: Individual
  - vehicles: VehicleList.using(there_is_another=False,complete_attribute='make')
---
id: interview_order_Voluntary_Administration_of_Estate
code: |
  # This is a placeholder to control logic flow in this interview

  basic_questions_intro_screen 
  Voluntary_Administration_of_Estate_intro
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["Voluntary_Administration_of_Estate"]["allowed courts"]
  nav.set_section('review_Voluntary_Administration_of_Estate')
  if is_representing_petitioner:
    attorney.name.first
    attorney.address.address
  users[0].name.first
  users[0].address.address
  users[0].phone_number
  decedent.name.first
  user_role = 'plaintiff'
  decedent_death_date
  decedent.address.address
  user_relationship
  decedent_has_will_no
  assets.add_assets
  if assets.there_are_any:
    review_assets
  if vehicles.there_are_any:
    review_vehicles  
  interested_parties[0].address.block()
  courts[0].address.county
  str(users[0])
  str(interested_parties[0])
  certified_mail_copy_sent
  signature_date
  Voluntary_Administration_of_Estate_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  Voluntary_Administration_of_Estate = True
---
#pulled in and edited from BQ
id: basic questions intro screen
question: |
  Ask the court to allow you to manage a person's estate: Mass Access Project
subquestion: |
  % if form_approved_for_email_filing:
  The MassAccess Project can help **Massachusetts residents** complete and file court forms in 3 steps:
  % else:
  The MassAccess Project can help **Massachusetts residents** complete and download forms in 3 steps:
  % endif
  
  Step 1. Answer questions that will fill in your form for you.  
  Step 2. Preview the completed form.  
  % if form_approved_for_email_filing:  
  Step 3. Email the form to the court using this secure website and save copies
  for yourself for later reference.  
  % else:
  Step 3. Download and print the final form. You will need to deliver it
  to the court on your own.
  % endif
  
  If you do not live in Massachusetts, you may be able to get help for your 
  legal problem from [your local legal aid 
  provider](https://www.lsc.gov/what-legal-aid/find-legal-aid).
  
  Tap the {green words} in any screen for a definition or more information.
  
  If you have questions about this form or the court process, 
  call the Trial Courtâ€™s Emergency HelpLine:  
  833-91-COURT (833-912-6878)  
  Monday-Friday  
  8:30am - 4:30pm

  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif

fields:
  - To continue, you must accept the [terms of use](https://massaccess.suffolklitlab.org/privacy/): acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: basic_questions_intro_screen
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words.
right: |
  % if user_has_saved_answers:
  ${fa_icon("bell", color="primary", size="sm")}
  Saved answers available!  
  
  ${action_button_html(url_action('load_answer'), icon="folder-open", label=word("View answers"), size="sm" )}
  % endif
---
#pulled in and edited from BQ
id: name of person
generic object: Individual
question: |
  What is ${x.object_possessive('name')}?
subquestion: |
  The decedent is the person who died, and whose estate you are asking the court to let you manage.
fields:
  - First Name: x.name.first
  - Middle Name: x.name.middle
    required: False
  - Last Name: x.name.last
  - Suffix: x.name.suffix
    code: |
      name_suffix()
    required: False
---
#pulled in and edited from BQ
id: "decedent's address"
question: |
  Where was ${ decedent.name.first } living when she/he died?
fields:
  - Street address: decedent.address.address
    address autocomplete: True
  - Unit/Apt.: decedent.address.unit
    required: False
  - City: decedent.address.city
  - State: decedent.address.state
    default: MA   
    code: |
      states_list()   
  - Zip: decedent.address.zip
    required: False
---
#pulled in and edited from BQ ALLOWS ME TO GET AN ADDRESS FOR INTERESTED PARTY
id: names of people
generic object: PeopleList
question: |
  Please list all ${x.object_name()} below
subquestion: |
  Click "${word("Add another")}" to add more.
list collect: True
fields:
  - Is this ${noun_singular(x.object_name())} a person or business?: x[i].person_type
    input type: radio
    choices:
      - Business or organization: business
      - Person: individual
    required: False
  - First name: x[i].name.first
    show if:
      variable: x[i].person_type
      is: "individual"
  - Last name: x[i].name.last
    show if:
      variable: x[i].person_type      
      is: "individual"
  - Suffix: x[i].name.suffix
    code: |
      name_suffix()
    show if:
      variable: x[i].person_type      
      is: "individual"
    required: False
  - Address: x[i].address.address
    address autocomplete: True
    show if:
      variable: x[i].person_type      
      is: "individual"
  - Unit: x[i].address.unit
    show if:
      variable: x[i].person_type      
      is: "individual"
    required: False
  - City: x[i].address.city
    show if:
      variable: x[i].person_type      
      is: "individual"
  - State: x[i].address.state
    show if:
      variable: x[i].person_type      
      is: "individual"
  - ZIP: x[i].address.zip
    show if:
      variable: x[i].person_type      
      is: "individual"
    required: False
  - note: "What is this party's interest? You may select more than one choice."
    show if:
      variable: x[i].person_type      
      is: "individual"
  - Heir: x[i].heir
    show if:
      variable: x[i].person_type      
      is: "individual"
    datatype: yesno
    help: Def of heir
  - Divisee: x[i].divisee
    show if:
      variable: x[i].person_type      
      is: "individual"
    datatype: yesno
    help: Def of divisee
  - Joint Owner: x[i].jointowner
    show if:
      variable: x[i].person_type      
      is: "individual"
    datatype: yesno
    help: Def of JO  
  - Name of business or organization: x[i].name.first
    show if:
      variable: x[i].person_type
      is: business
---
#pulled in and edited from BQ and civil Action Coversheet
id: petitioner address
question: |
 % if is_representing_petitioner:
  What is ${ users[0].name.first }'s address?
  % else:
  What is your address?
  % endif
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Unit: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: MA      
  - Zip: users[0].address.zip
    required: False
#  HERE, ASK IF THIS IS SAME AS MAILING, IF NOT, SHOW MAILING ADDRESS ENTRY FIELDS
  - Is mailing address the same?: address_same_as_mailing
    datatype: yesnoradio
  - Mailing Street Address: petitioner_address_street_mailing
    address autocomplete: True
    show if:
      variable: address_same_as_mailing
      is: False
  - Mailing Unit: petitioner_address_street2_mailing
    show if:
      variable: address_same_as_mailing
      is: False
    required: False 
  - Mailing City: petitioner_address_city_mailing
    show if:
      variable: address_same_as_mailing
      is: False
  - Mailing State: petitioner_address_state_mailing
    show if:
      variable: address_same_as_mailing
      is: False
  - Mailing Zip: petitioner_address_zip_mailing
    show if:
      variable: address_same_as_mailing
      is: False
    required: False 
---
id: your contact information
question: |
 % if is_representing_petitioner:
  What is ${ users[0].name.first }'s primary phone number?
  % else:
  What is your primary phone number?
  % endif
fields:  
  - Phone number: users[0].phone_number
    required: true 
---
#pulled in and edited from Civil Action Coversheet
id: representation
question: |
  Representation
fields:
  - Are you an attorney representing a petitioner?: is_representing_petitioner
    datatype: yesnoradio
  - 'Attorney BBO Number': attorney_bbo_number
    show if:
      variable: is_representing_petitioner
      is: True
---
#pulled in and edited from Civil Action Coversheet
id: petitioner name
question:  |
  % if is_representing_petitioner:
  What is your client's name?
  % else:
  What is your name?
  % endif
fields:
  - First Name: users[0].name.first
  - Middle Name: users[0].name.middle
    required: False
  - Last Name: users[0].name.last
  - Suffix: users[0].name.suffix
    code: |
      name_suffix()
    required: False  
---
#pulled in and edited from Civil Action Coversheet
id: attorney name
question: |
  What is your name?
fields:
  - First name: attorney.name.first
  - Middle name: attorney.name.middle
    required: False
  - Last name: attorney.name.last
  - Suffix: attorney.name.suffix
    code: |
      name_suffix()
    required: False
---
#pulled in and edited from Civil Action Coversheet
id: attorney address
generic object: Individual
question: |
  What is your address?
fields:
  - Street address: attorney.address.address
    address autocomplete: True
  - Unit: attorney.address.unit
    required: False
  - City: attorney.address.city
  - State: attorney.address.state
    default: MA   
    code: |
      states_list()   
  - Zip: attorney.address.zip
    required: False
  - Email Address: attorney.email  
  - Primary Phone Number: attorney.phone_number
    required: False

---

#pulled in and edited from Financial Statement

table: vehicles.table
rows: vehicles
columns:
  - Make/Model/Vin: |
      row_item.make + ' ' + row_item.model + ' ' + row_item.vin
edit:
  - make
---
#pulled in and edited from Financial Statement

table: assets.table
rows: assets
columns:
  - Type: |
      asset_type_list()[row_item.type]
  - Description: |
      row_item.description
  - Current balance: |
      currency(row_item.balance)
edit:
  - balance
---
#pulled in and edited from Financial Statement
id: |
  What assets and vehicles?
question: |
  Assets
subquestion: |
  Did ${ decedent.name.first } own any of the following?
fields:
  - Cars, motorcycles, or other vehicles: vehicles.there_are_any
    help: |
      Answer yes if ${ decedent.name.first } owned a car, motorcyle, or any other vehicle
    datatype: yesno
  - Other assets: assets.asset_types
    datatype: checkboxes
    code: |
      asset_type_list()
    exclude: |
      ['real estate','vehicle']      
---
#pulled in and edited from Financial Statement
id: |
  assets description
question: |
  Describe the ${ordinal(i) } asset.
fields:
  - What type of asset is it?: assets[i].type
    code: |
      asset_type_list()
    exclude: |
      ['real estate','vehicle']      
  - Describe this account: assets[i].description
    #help - include info that can describe this account
  - Explain what type of asset this is: assets[i].other_type
    show if:
      variable: assets[i].type
      is: 'other'     
  - Current Value : assets[i].balance
    datatype: currency
---
#pulled in and edited from Financial Statement
id: |
  vehicles description
question: |
  Describe the vehicle.
fields:
  - Make: vehicles[i].make
    hint: e.g, Ford, Honda 
  - Model: vehicles[i].model
    hint: e.g., Fusion, Civic
  - VIN: vehicles[i].vin
    hint: VIN is the Vehicle Identification Number
---
id: |
  assets review table
question: |
  ${ decedent.name.first }'s Assets:
subquestion: |
  So far you've told us about ${assets.number()} asset(s).
  You can add more or click continue to go to the next question.
  ${ assets.table }
  ${ assets.add_action() }
field: review_assets 
---
id: |
  vehicles review table
question: |
  ${ decedent.name.first }'s Vehicles:
subquestion: |
  ${vehicles.table}
  ${vehicles.add_action() }
field: review_vehicles
---
id: Voluntary Administration of Estate
continue button field: Voluntary_Administration_of_Estate_intro
question: |
  Voluntary Administration of Estate
subquestion: |
  You need to ask the Probate and Family Court to allow you to manage the estate of someone who has died.
  You can use the Voluntary Administration of Estate form IF:
  
    1.	The person died more than 30 days ago.

    2.  The person was a resident of Massachusetts at the time of death,
    
    3.  The value of the estate, not counting one car, is $25,000 or less, 
    
    4.	There is no real estate owned by the estate, and
    
    5.	No one else has filed to probate the decedentâ€™s will or appoint a personal representative.

  Once the form is completed and e-signed, it must be submitted the Probate Court representing the county in which the decedent resided at the time of death.
fields: 
  - Does the estate you are interested in include real estate?: real_estate
    datatype: yesnoradio
  - Does the total value of the estate, excluding one vehicle, exceed $25,000?: over_25
    datatype: yesnoradio
  - Has it been less than 30 days since the death of the estate owner?: under_30
    datatype: yesnoradio
---
id: Placeholder preview screen
continue button field: Voluntary_Administration_of_Estate_preview_question
question: |
  Placeholder preview screen
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${Voluntary_Administration_of_Estate_attachment['preview']}
---
id: "What is the decedent's date of death?"
question: |
  What was the date of ${ decedent.name.first }'s death?
subquestion: |
  You can find the date on ${ decedent.name.first }'s death certificate.
fields:
  - "Date": decedent_death_date
    datatype: date
---
id: What is your relationship to the decedent?
question: |
  What is your relationship to ${ decedent.name.first }?
subquestion: |
  Are you a {Personal Representative} named in will, surviving spouse, {heir}, {devisee}, etc.
fields:
  - 'Relationship': user_relationship
    choices:
      - Surviving Spouse
      - Heir
      - Divisee
      - Personal Representative named in will
      - Other
  - I am ${decedent.name.first}'s : user_relationship 
    show if:
      variable: user_relationship
      is: Other
terms:
  Personal Representative: |
    A person at least 18 years of age who has an interest in the decedentâ€™s estate and who undertakes to administer the decedentâ€™s estate without the formality of a court appointment.
  devisee: |
    Persons, entities, charitable organizations, or trusts designated in a will to receive the decedentâ€™s personal or real property. In the case of a devise to an existing trust or trustees, or to a trustee or trust established by the will, the trust or trustee is the devisee and the beneficiaries are not devisees.
  heir: |
    At the time of the decedentâ€™s death, persons who are entitled to receive the decedentâ€™s property under the intestacy succession laws if there is no will.
---
id: Does the decedent have a will?
question: |
  Did ${ decedent.name.first } have a will?
subquestion: |
  Select "Yes" if the original will and codicil(s) are in the possession of the court or accompany this statement, and you are unaware of any instrument revoking the will and believe it to be ${ decedent.name.first }'s last will. Select "No" if you are unaware of any unrevoked will relating to property in Massachusetts.  
buttons:
  - Yes:
      code: |
        decedent_has_will_yes = True
        decedent_has_will_no = False
  - No:
      code: |
        decedent_has_will_no = True
        decedent_has_will_yes = False
---
id: Have you sent a copy of this form to the Division of Medical Assistance
question: |
  Have you sent a copy of this form to the Division of Medical Assistance
subquestion: |
  NOTE: How does someone fill this out during form completion?
yesno: certified_mail_copy_sent
---
progress: 100
mandatory: True
id: Placeholder download screen
question: |
  Placeholder download screen
subquestion: |
  Placeholder
  
  ### Next steps
  
  1. Step 1
  1. Step 2
  
  Below is a preview of your form.
  
  ${Voluntary_Administration_of_Estate_attachment['final'] }
need: Voluntary_Administration_of_Estate
attachment code: Voluntary_Administration_of_Estate_attachment['final']
---
objects:
  - Voluntary_Administration_of_Estate_attachment: DADict
---
attachment:
    variable name: Voluntary_Administration_of_Estate_attachment[i]
    name: Voluntary Administration of Estate
    filename: Voluntary_Administration_of_Estate
    skip undefined: True
    pdf template file: Voluntary_Administration_of_Estate_Draftv2.pdf
    fields: 
      - "court_county": ${ courts[0].address.county }
      - "decedent_name_first": ${ decedent.name.first }
      - "decedent_name_middle": ${ decedent.name.middle }
      - "decedent_name_last": ${ decedent.name.last }
      - "decedent_name_first__2": ${ decedent.name.first }
      - "decedent_name_middle__2": ${ decedent.name.middle }
      - "decedent_name_last__2": ${ decedent.name.last }
      - "decedent_name": ${ str(decedent) }
      - "decedent_address_street": ${ decedent.address.address }
      - "decedent_address_street2": ${ decedent.address.unit }
      - "decedent_address_city": ${ decedent.address.city }
      - "decedent_address_state": ${ decedent.address.state }
      - "decedent_address_zip": ${ decedent.address.zip }
      - "petitioner_name_first": ${ users[0].name.first }
      - "petitioner_name_last": ${ users[0].name.last }
      - "petitioner_address_street": ${ users[0].address.address }
      - "petitioner_address_street2": ${ users[0].address.unit }
      - "petitioner_address_city": ${ users[0].address.city }
      - "petitioner_address_state": ${ users[0].address.state }
      - "petitioner_address_zip": ${ users[0].address.zip }
      - "petitioner_phone": ${ users[0].phone_number }
      - "decedent_name_first__3": ${ decedent.name.first }
      - "decedent_name_middle__3": ${ decedent.name.middle }
      - "decedent_name_last__3": ${ decedent.name.last }
      - "interested_party1_name": ${ str(interested_parties[0]) }
      - "interested_party1_address_block": ${ interested_parties[0].address.block() }
      - "interested_party2_name": ${ str(interested_parties[1]) }
      - "interested_party2_address_block": ${ interested_parties[1].address.block() }
      - "interested_party3_name": ${ str(interested_parties[2]) }
      - "interested_party3_address_block": ${ interested_parties[2].address.block() }
      - "interested_party4_name": ${ str(interested_parties[3]) }
      - "interested_party4_address_block": ${ interested_parties[3].address.block() }
      - "interested_party5_name": ${ str(interested_parties[4]) }
      - "interested_party5_address_block": ${ interested_parties[4].address.block() }
      - "interested_party1_heir": ${ interested_parties[0].heir }
      - "interested_party1_divisee": ${ interested_parties[0].divisee }
      - "interested_party1_jointowner": ${ interested_parties[0].jointowner }
      - "interested_party2_heir": ${ interested_parties[1].heir }
      - "interested_party2_devisee": ${ interested_parties[1].devisee }
      - "interested_party2_jointowner": ${ interested_parties[1].jointowner }
      - "interested_party3_heir": ${ interested_parties[2].heir }
      - "interested_party3_devisee": ${ interested_parties[2].devisee }
      - "interested_party3_jointowner": ${ interested_parties[2].jointowner }
      - "interested_party4_heir": ${ interested_parties[3].heir }
      - "interested_party4_devisee": ${ interested_parties[3].devisee }
      - "interested_party4_jointowner": ${ interested_parties[3].jointowner }
      - "interested_party5_heir": ${ interested_parties[4].heir }
      - "interested_party5_devisee": ${ interested_parties[4].devisee }
      - "interested_party5_jointowner": ${ interested_parties[4].jointowner }
      - "decedent_name_first__4": ${ decedent.name.first }
      - "decedent_name_middle__4": ${ decedent.name.middle }
      - "decedent_name_last___4": ${ decedent.name.last }
      - "signature_date": ${ signature_date }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "petitioner_signature": ${ petitioners[0].signature if i == 'final' else '' }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "attorney_signature": ${ attorney.signature if i == 'final' else '' }
      - "attorney_name": ${ attorney.name }
      - "attorney_address_street": ${ attorney.address.address }
      - "attorney_address_street2": ${ attorney.address.unit }
      - "attorney_address_city": ${ attorney.address.city }
      - "attorney_address_state": ${ attorney.address.state }
      - "attorney_address_zip": ${ attorney.address.zip }
      - "attorney_phone": ${ attorney.phone_number }
      - "attorney_email": ${ attorney.email }
      - "decedent_death_date": ${ decedent_death_date }
      - "petitioner_name_middle_initial": ${ user.middle_initial() }
      - "petitioner_address_street2_mailing": ${ petitioner_address_street2_mailing }
      - "petitioner_address_street_mailing": ${ petitioner_address_street_mailing }
      - "petitioner_address_city_mailing": ${ petitioner_address_city_mailing }
      - "petitioner_address_state_mailing": ${ petitioner_address_state_mailing }
      - "petitioner_address_zip_mailing": ${ petitioner_address_zip_mailing }
      - "petitioner_relationship": ${ user_relationship }
      - "decedent_has_will_no": ${ decedent_has_will_no }
      - "decedent_has_will_yes": ${ decedent_has_will_yes }
      - "certified_mail_copy_sent": ${ certified_mail_copy_sent }
      - "asset_car": |
          ${ vehicles.item(0).make }
          ${ vehicles.item(0).model }
          ${ vehicles.item(0).vin }
      - "asset_1": ${ assets[0].description }
      - "asset_1_value": ${ assets[0].balance }
      - "asset_2": ${ assets[1].description }
      - "asset_2_value": ${ assets[1].balance }
      - "asset_3": ${ assets[2].description }
      - "asset_3_value": ${ assets[2].balance }
      - "asset_4": ${ assets[3].description }
      - "asset_4_value": ${ assets[3].balance }
      - "asset_value_total": ${ assets.balance_total() }
      - "attorney_bbo_number": ${ attorney_bbo_number }
---
id: Voluntary_Administration_of_Estate review screen
event: review_Voluntary_Administration_of_Estate
question: |
  Placeholder Review Screen
subquestion: |
  Edit your answers below
review: 
  - Edit: decedent_death_date
    button: |
      Date of decedent death:
      ${ decedent_death_date.format() }
  - Edit: petitioner_address_street2_mailing
    button: |
      Petitioner address street2 mailing:
      ${ petitioner_address_street2_mailing }
  - Edit: petitioner_address_street_mailing
    button: |
      Petitioner address street mailing:
      ${ petitioner_address_street_mailing }
  - Edit: petitioner_address_city_mailing
    button: |
      Petitioner address city mailing:
      ${ petitioner_address_city_mailing }
  - Edit: petitioner_address_state_mailing
    button: |
      Petitioner address state mailing:
      ${ petitioner_address_state_mailing }
  - Edit: petitioner_address_zip_mailing
    button: |
      Petitioner address zip mailing:
      ${ petitioner_address_zip_mailing }
  - Edit: user_relationship
    button: |
      Petitioner relationship:
      ${ user_relationship }
  - Edit: decedent_has_will_no
    button: |
      Decedent has will:
      ${ word(yesno(decedent_has_will_no)) }
  - Edit: decedent_has_will_yes
    button: |
      Decedent has will:
      ${ word(yesno(decedent_has_will_yes)) }
  - Edit: certified_mail_copy_sent
    button: |
      Certified mail copy sent:
      ${ word(yesno(certified_mail_copy_sent)) }
  - Edit: asset_car
    button: |
      Motor vehicle make, model, and VIN:
      ${ asset_car }
  - Edit: asset_1
    button: |
      Asset 1 description:
      ${ asset_1 }
  - Edit: asset_1_value
    button: |
      Asset 1 value:
      ${ asset_1_value }
  - Edit: asset_2
    button: |
      Asset 2 description:
      ${ asset_2 }
  - Edit: asset_2_value
    button: |
      Asset 2 value:
      ${ asset_2_value }
  - Edit: asset_3
    button: |
      Asset 3 description:
      ${ asset_3 }
  - Edit: asset_3_value
    button: |
      Asset 3 value:
      ${ asset_3_value }
  - Edit: asset_4
    button: |
      Asset 4 description:
      ${ asset_4 }
  - Edit: asset_4_value
    button: |
      Asset 4 value:
      ${ asset_4_value }
  - Edit: asset_value_total
    button: |
      Asset total value:
      ${ asset_value_total }
  - Edit: interested_party1_heir
    button: |
      Interested party1 heir:
      ${ word(yesno(interested_party1_heir)) }
  - Edit: interested_party1_divisee
    button: |
      Interested party1 divisee:
      ${ word(yesno(interested_party1_divisee)) }
  - Edit: interested_party1_jointowner
    button: |
      Interested party1 jointowner:
      ${ word(yesno(interested_party1_jointowner)) }
  - Edit: interested_party2_heir
    button: |
      Interested party2 heir:
      ${ word(yesno(interested_party2_heir)) }
  - Edit: interested_party2_devisee
    button: |
      Interested party2 devisee:
      ${ word(yesno(interested_party2_devisee)) }
  - Edit: interested_party2_jointowner
    button: |
      Interested party2 jointowner:
      ${ word(yesno(interested_party2_jointowner)) }
  - Edit: interested_party3_heir
    button: |
      Interested party3 heir:
      ${ word(yesno(interested_party3_heir)) }
  - Edit: interested_party3_devisee
    button: |
      Interested party3 devisee:
      ${ word(yesno(interested_party3_devisee)) }
  - Edit: interested_party3_jointowner
    button: |
      Interested party3 jointowner:
      ${ word(yesno(interested_party3_jointowner)) }
  - Edit: interested_party4_heir
    button: |
      Interested party4 heir:
      ${ word(yesno(interested_party4_heir)) }
  - Edit: interested_party4_devisee
    button: |
      Interested party4 devisee:
      ${ word(yesno(interested_party4_devisee)) }
  - Edit: interested_party4_jointowner
    button: |
      Interested party4 jointowner:
      ${ word(yesno(interested_party4_jointowner)) }
  - Edit: interested_party5_heir
    button: |
      Interested party5 heir:
      ${ word(yesno(interested_party5_heir)) }
  - Edit: interested_party5_devisee
    button: |
      Interested party5 devisee:
      ${ word(yesno(interested_party5_devisee)) }
  - Edit: interested_party5_jointowner
    button: |
      Interested party5 jointowner:
      ${ word(yesno(interested_party5_jointowner)) }
  - Edit: attorney_bbo_number
    button: |
      Attorney BBO number:
      ${ attorney_bbo_number }
  - Edit: courts[0].address.county
    button: |
      courts[0].address.county:
      ${ courts[0].address.county }
  - Edit: decedents[0].name.first
    button: |
      decedents[0].name.first:
      ${ decedents[0].name.first }
  - Edit: decedents[0].name.middle
    button: |
      decedents[0].name.middle:
      ${ decedents[0].name.middle }
  - Edit: decedents[0].name.last
    button: |
      decedents[0].name.last:
      ${ decedents[0].name.last }
  - Edit: decedents[0]
    button: |
      decedents[0]:
      ${ decedents[0] }
  - Edit: decedents[0].address.address
    button: |
      decedents[0].address.address:
      ${ decedents[0].address.address }
  - Edit: decedents[0].address.unit
    button: |
      decedents[0].address.unit:
      ${ decedents[0].address.unit }
  - Edit: decedents[0].address.city
    button: |
      decedents[0].address.city:
      ${ decedents[0].address.city }
  - Edit: decedents[0].address.state
    button: |
      decedents[0].address.state:
      ${ decedents[0].address.state }
  - Edit: decedents[0].address.zip
    button: |
      decedents[0].address.zip:
      ${ decedents[0].address.zip }
  - Edit: petitioners[0].name.first
    button: |
      petitioners[0].name.first:
      ${ petitioners[0].name.first }
  - Edit: petitioners[0].name.last
    button: |
      users[0].name.last:
      ${ users[0].name.last }
  - Edit: users[0].address.address
    button: |
      users[0].address.address:
      ${ users[0].address.address }
  - Edit: users[0].address.unit
    button: |
      users[0].address.unit:
      ${ users[0].address.unit }
  - Edit: users[0].address.city
    button: |
      users[0].address.city:
      ${ users[0].address.city }
  - Edit: users[0].address.state
    button: |
      users[0].address.state:
      ${ users[0].address.state }
  - Edit: users[0].address.zip
    button: |
      users[0].address.zip:
      ${ users[0].address.zip }
  - Edit: users[0].phone_number
    button: |
      users[0].phone_number:
      ${ users[0].phone_number }
  - Edit: interested_parties[0]
    button: |
      interested_parties[0]:
      ${ interested_parties[0] }
  - Edit: interested_parties[0].address.address
    button: |
      interested_parties[0].address.address:
      ${ interested_parties[0].address.address }
  - Edit: interested_parties[1]
    button: |
      interested_parties[1]:
      ${ interested_parties[1] }
  - Edit: interested_parties[1].address.address
    button: |
      interested_parties[1].address.address:
      ${ interested_parties[1].address.address }
  - Edit: interested_parties[2]
    button: |
      interested_parties[2]:
      ${ interested_parties[2] }
  - Edit: interested_parties[2].address.address
    button: |
      interested_parties[2].address.address:
      ${ interested_parties[2].address.address }
  - Edit: interested_parties[3]
    button: |
      interested_parties[3]:
      ${ interested_parties[3] }
  - Edit: interested_parties[3].address.address
    button: |
      interested_parties[3].address.address:
      ${ interested_parties[3].address.address }
  - Edit: interested_parties[4]
    button: |
      interested_parties[4]:
      ${ interested_parties[4] }
  - Edit: interested_parties[4].address.address
    button: |
      interested_parties[4].address.address:
      ${ interested_parties[4].address.address }
  - Edit: signature_date
    button: |
      signature_date:
      ${ signature_date }
  - Edit: petitioners[0].signature
    button: |
      petitioners[0].signature:
      ${ petitioners[0].signature }
  - Edit: attorney.signature
    button: |
      attorney.signature:
      ${ attorney.signature }
  - Edit: attorney
    button: |
      attorney:
      ${ attorney }
  - Edit: attorney.address.address
    button: |
      attorney.address.address:
      ${ attorney.address.address }
  - Edit: attorney.address.unit
    button: |
      attorney.address.unit:
      ${ attorney.address.unit }
  - Edit: attorney.address.city
    button: |
      attorney.address.city:
      ${ attorney.address.city }
  - Edit: attorney.address.state
    button: |
      attorney.address.state:
      ${ attorney.address.state }
  - Edit: attorney.address.zip
    button: |
      attorney.address.zip:
      ${ attorney.address.zip }
  - Edit: attorney.phone_number
    button: |
      attorney.phone_number:
      ${ attorney.phone_number }
  - Edit: attorney.email
    button: |
      attorney.email:
      ${ attorney.email }
